
map $host $x_proxy_json_host {
  default "FAIL";
}
map $host $x_proxy_host {
  default "FAIL";
}
map $uri $vc_max_width {
  default 2560;
  ~[^\/]+\.(jpg|jpeg|png)/w(?<w_width>260|310|370|500|655|768|1024|1270|1500|2560)(?:q[0-9]+)?$ $w_width;
  ~(_|/)thumbnail[^\/]*\.(jpg|jpeg|png)(?:/w[0-9]+)?(?:q[0-9]+)?$ 655;
}
map $uri $vc_quality {
  default 92;
  ~(_|/)thumbnail[^\/]*\.(jpg|jpeg|png)(?:/w[0-9]+)?$ 85;
  ~[^\/]+\.(jpg|jpeg|png)/w[0-9]+$ 85;
  ~[^\/]+\.(jpg|jpeg|png)/w[0-9]+q(?<q_quality>30|40|50|75|85|92)$ $q_quality;
}


# LIMITS
limit_req_zone "$x_proxy_host--$uri" zone=image_resizing:100m rate=1r/m;

# CACHE
proxy_cache_path /var/cache/ngx_cache/cache1 levels=2:2 keys_zone=original:20m max_size=180m inactive=2h;
proxy_cache_path /var/cache/ngx_cache/cache2 levels=2:2 keys_zone=resized:100m max_size=7500m inactive=30d;
proxy_cache_path /var/cache/ngx_cache/cache5 levels=2:2 keys_zone=jsonsize:6m max_size=10m inactive=30d;
proxy_temp_path  /var/cache/ngx_cache/tmp 2 2;
proxy_cache_key $x_proxy_host--$uri; # does not include query string
proxy_cache_revalidate on;
proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
proxy_cache_valid any 2m;
proxy_cache_valid 200 10d;
proxy_cache_valid 502 2s;
proxy_cache_valid 504 2s;

server {
  listen 9080;
  server_name _;
  include conf.d/container_version.inc;

  location = /health {
    default_type application/json;
    access_log off;
    return 200 "$version_identifier";
  }

  # For image testing
  location ~ ^(/.+\.(?:jpeg|jpg|png))/json$ {
     set $x_json_image_path $1;
     proxy_intercept_errors on;
     error_page 301 302 307 403 404 = @200_json_file_not_found;
     error_page 415 = @200_json_image_invalid;
     gzip off;
     proxy_pass "$x_proxy_json_host/$x_json_image_path$is_args$args";
     proxy_cache       jsonsize;
     proxy_cache_key "$x_proxy_json_host/$x_json_image_path$is_args$args";
     proxy_cache_valid any 10s;
     proxy_cache_valid 200 10s;
     proxy_cache_valid 404 4s;
     proxy_cache_valid 415 4s;
     proxy_cache_valid 502 10s;
     proxy_cache_valid 504 10s;
     proxy_cache_revalidate on;
     proxy_cache_lock on;
     proxy_cache_lock_age 1s;
     proxy_cache_lock_timeout 5s;
     image_filter size;
  }

  location ~ \.(png|jpg|jpeg)(/w(:?260|310|370|500|655|768|1024|1270|1500|2560))?(:?q(30|40|50|75|85|92))?$ {
    limit_except GET HEAD {
      deny all;
    }
    if ($x_proxy_host = 'FAIL') {
      return 404 "$host";
    }
    proxy_set_header X-Next-Host $x_proxy_host;
    proxy_read_timeout 60s;
    proxy_pass http://127.0.0.1:8888$uri; # intentionally cut off the query string!
    proxy_cache       resized;
    proxy_cache_lock on;
    proxy_cache_lock_age 2s;
    proxy_cache_lock_timeout 5s;
    add_header X-Content-Type-Options "nosniff";
    add_header Cache-Control "public, max-age=8640000";
    add_header X-Big-Squeeze "$upstream_cache_status-$upstream_status-$request_time-$vc_max_width-$vc_quality" always;

  }

  # catch unsupported sizes
  location ~ ^(.+\.(:?png|jpg|jpeg))/w[0-9]+(q[0-9]+)?$ {
    add_header Cache-Control "public, max-age=600";
    return 302 ./w${vc_max_width}q75;
  }


  location / {
    return 404 "";
  }
  location @empty_404_no_type {
    return 404 "";
  }
  location @empty_404_json {
    default_type application/json;
    return 404 "{}";
  }
  location @200_json_file_not_found {
    default_type application/json;
    add_header Cache-Control "private, max-age=10";
    return 200 "{ \"img\" : { \"type\": \"error_image_not_found\" } }";
  }
  location @200_json_image_invalid {
    default_type application/json;
    add_header Cache-Control "private, max-age=10";
    return 200 "{ \"img\" : { \"type\": \"error_image_format_invalid\" } }";
  }
}


server {
  listen 127.0.0.1:8888 bind;
  server_name _;
  allow 127.0.0.1;
  deny all;
  limit_req zone=image_resizing burst=1000 nodelay;

  # Defaults
  set $vc_max_height  -;

  location ~ ^/(.+\.(?:jpg|jpeg|png))(/w[0-9]+)?(q[0-9]+)?$ {
    set $x_asset_path "$1";
    proxy_cache_key $http_x_next_host--$x_asset_path;
    proxy_cache       original;
    proxy_cache_lock on;
    proxy_cache_lock_age 1s;
    proxy_cache_lock_timeout 2s;
    include conf.d/image-resize-proxy.inc;
  }
  location / {
    return 404 "";
  }
  location @empty_404_no_type {
    return 404 "";
  }
}


